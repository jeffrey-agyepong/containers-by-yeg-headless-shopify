---
import { setCache } from "../../utils/cache";
import { getCollectionByHandle } from "../../utils/shopify";
import { getAllCollections } from "../../utils/shopify";


import BaseLayout from "../../layouts/BaseLayout.astro";
import NotFoundLayout from "../../layouts/NotFoundLayout.astro";
import ProductCard from "../../components/ProductCard.astro";
import ProductBreadcrumb from "../../components/ProductBreadcrumb.astro";

export const prerender = false;

const headers = Astro.request.headers;
const ip = headers.get("x-vercel-forwarded-for") || Astro.clientAddress;
const { handle } = Astro.params;

if (!handle) {
  throw new Error('Missing collection handle.');
}

// const collection = await getCollectionByHandle(handle);
const collection = await getCollectionByHandle(handle || "", ip);

if (!collection) {
  throw new Error(`Collection "${handle}" not found.`);
}

const products = await getAllCollections({ buyerIP: ip });
setCache.short(Astro);
---

{
  !collection ? (
    <NotFoundLayout title="Collection not found" message="No products available in this collection." />
  ) : (
    <BaseLayout title={collection.title}>
      <div class="container pt-6 mt-24">
        <ProductBreadcrumb title={collection.title} />
        <h1 class="text-3xl font-bold mt-4">{collection.title}</h1>
        {collection.description && (
          <p class="text-lg text-gray-500 mt-2">{collection.description}</p>
        )}
      </div>

      <section class="container py-12">
        <div class="grid grid-cols-1 gap-8 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
          {products.map(product => (
            <ProductCard product={product} />
          ))}
        </div>
      </section>
    </BaseLayout>
  )
}
